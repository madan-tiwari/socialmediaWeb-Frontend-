{"ast":null,"code":"var _jsxFileName = \"E:\\\\Agile Web App\\\\social media (frontend)\\\\src\\\\post\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport { list } from './postAPI';\nimport { Link } from 'react-router-dom';\nimport DefaultPostImage from '../images/defaultpostimage.jpg';\n\nclass Posts extends Component {\n  //state to store users\n  constructor() {\n    super();\n\n    this.loadPosts = page => {\n      // list method lists all the users from the api\n      list(page).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            posts: data\n          });\n        }\n      });\n    };\n\n    this.loadMore = number => {\n      this.setState({\n        page: this.state.page + number\n      });\n      this.loadPosts(this.state.page + number);\n    };\n\n    this.loadLess = number => {\n      this.setState({\n        page: this.state.page - number\n      });\n      this.loadPosts(this.state.page - number);\n    };\n\n    this.renderPosts = posts => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, posts.map((post, i) => {\n        const posterId = post.postedBy ? `/user/${post.postedBy._id}` : \"\"; //to unable click the anonymous user posts\n\n        const posterName = post.postedBy ? post.postedBy.name : \"Anonymous\";\n        return (\n          /*#__PURE__*/\n          // (<div key={i}>{user.name}</div>)\n          React.createElement(\"div\", {\n            className: \"card col-md-4\",\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"card-body\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              height: \"200px\",\n              width: \"100%\"\n            },\n            className: \"img-thumbnail mb-3\",\n            src: `${process.env.REACT_APP_API_URL}/post/photo/${post._id}`,\n            onError: i => i.target.src = `${DefaultPostImage}`,\n            alt: post.name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"h5\", {\n            className: \"card-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }\n          }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"card-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }\n          }, post.body.substring(0, 50)), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"font-italic mark\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }\n          }, \"Posted by: \", /*#__PURE__*/React.createElement(Link, {\n            to: `${posterId}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 40\n            }\n          }, posterName), \" \", \" on \", new Date(post.created).toDateString()), /*#__PURE__*/React.createElement(Link, {\n            to: `/post/${post._id}`,\n            className: \"btn btn-raised btn -sm btn-primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }\n          }, \"Read more...\")))\n        );\n      }));\n    };\n\n    this.state = {\n      posts: [],\n      page: 1\n    };\n  } // when component mounts execute method that lists users\n\n\n  componentDidMount() {\n    this.loadPosts(this.state.page);\n  }\n\n  render() {\n    const {\n      posts,\n      page\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \" \", !posts.length ? \"No more posts!\" : \"RECENT POSTS\", \" \"), this.renderPosts(posts), page > 1 ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-raised btn-warning mr-5 mt-5 mb-5\",\n      onClick: () => this.loadLess(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Previous (\", this.state.page - 1, \")\") : \"\", posts.length ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-raised btn-success mt-5 mb-5\",\n      onClick: () => this.loadMore(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Next (\", page + 1, \")\") : \"\");\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["E:/Agile Web App/social media (frontend)/src/post/Posts.js"],"names":["React","Component","list","Link","DefaultPostImage","Posts","constructor","loadPosts","page","then","data","error","console","log","setState","posts","loadMore","number","state","loadLess","renderPosts","map","post","i","posterId","postedBy","_id","posterName","name","height","width","process","env","REACT_APP_API_URL","target","src","title","body","substring","Date","created","toDateString","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { list } from './postAPI';\nimport { Link } from 'react-router-dom';\nimport DefaultPostImage from '../images/defaultpostimage.jpg';\n\nclass Posts extends Component {\n\n    //state to store users\n    constructor(){\n        super()\n        this.state = {\n            posts:[],\n            page: 1\n        }\n    }\n\n    // when component mounts execute method that lists users\n    componentDidMount(){\n        this.loadPosts(this.state.page)\n    }\n\n    loadPosts = page => {\n        // list method lists all the users from the api\n        list(page).then(data =>{\n            if(data.error){console.log(data.error)}\n            else{this.setState({posts:data})}\n        })\n    }\n\n    loadMore = number => {\n        this.setState({ page: this.state.page + number });\n        this.loadPosts(this.state.page + number);\n    };\n \n    loadLess = number => {\n        this.setState({ page: this.state.page - number });\n        this.loadPosts(this.state.page - number);\n    };\n\n\n    render() {\n        const {posts, page} = this.state\n        return (\n            <div className =\"container\">\n                <h2 className=\"mt-5 mb-5\"> {!posts.length ? \"No more posts!\" : \"RECENT POSTS\"} </h2>\n                {this.renderPosts(posts)}\n\n                {page > 1 ? (\n                    <button\n                        className=\"btn btn-raised btn-warning mr-5 mt-5 mb-5\"\n                        onClick={() => this.loadLess(1)}\n                    >\n                        Previous ({this.state.page - 1})\n                    </button>\n                ) : (\n                    \"\"\n                )}\n \n                {posts.length ? (\n                    <button\n                        className=\"btn btn-raised btn-success mt-5 mb-5\"\n                        onClick={() => this.loadMore(1)}\n                    >\n                        Next ({page + 1})\n                    </button>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n\n    renderPosts = posts => {\n       return(\n        <div className=\"row\">\n            {/* {JSON.stringify(users)} */}\n            {/* looping through posts array. map function works only with array */}\n            {posts.map((post,i)=> {\n                 const posterId = post.postedBy ? `/user/${post.postedBy._id}` : \"\"  //to unable click the anonymous user posts\n                 const posterName = post.postedBy ? post.postedBy.name : \"Anonymous\"\n                return(\n                    // (<div key={i}>{user.name}</div>)\n                    <div className=\"card col-md-4\"  key={i}>\n                    \n                        <div className=\"card-body\">\n                        <img style = {{height: \"200px\", width: \"100%\"}} className=\"img-thumbnail mb-3\" src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`} onError={i => (i.target.src=`${DefaultPostImage}`)} alt={post.name}/>\n                            <h5 className=\"card-title\">{post.title}</h5>\n                            {/* substring to limit the body size for display */}\n                            <p className=\"card-text\">{post.body.substring(0, 50)}</p>\n                        <br/>\n                        <p className=\"font-italic mark\">\n                            Posted by: <Link to = {`${posterId}`}>{posterName}</Link>\n                            {\" \"} on {new Date(post.created).toDateString()}\n                        </p>\n                            <Link to={`/post/${post._id}`} className=\"btn btn-raised btn -sm btn-primary\">Read more...</Link>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )}\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}