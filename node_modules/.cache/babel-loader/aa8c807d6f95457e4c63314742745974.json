{"ast":null,"code":"var _jsxFileName = \"E:\\\\Agile Web App\\\\social media (frontend)\\\\src\\\\post\\\\Comment.js\";\nimport React, { Component } from 'react';\nimport { comment, uncomment } from './postAPI';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DefaultPostImage from '../images/default_avatar.png';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"\",\n      error: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        text\n      } = this.state;\n\n      if (!text.length > 0 || text.length > 150) {\n        this.setState({\n          error: \"Comment should not be empty and less than 150 characters long\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.addComment = e => {\n      e.preventDefault();\n\n      if (!isAuthenticated()) {\n        this.setState({\n          error: \"Please LOGIN to leave a comment\"\n        });\n        return false;\n      }\n\n      if (this.isValid()) {\n        const userId = isAuthenticated().user._id;\n\n        const token = isAuthenticated().token;\n        const postId = this.props.postId;\n        comment(userId, token, postId, {\n          text: this.state.text\n        }).then(data => {\n          if (data.error) {\n            console.log(data.error);\n          } else {\n            this.setState({\n              text: \"\"\n            }); // dispatch fresh list of coments to parent (SinglePost)\n\n            this.props.updateComments(data.comments);\n          }\n        });\n      }\n    };\n\n    this.deleteComment = comment => {\n      const userId = isAuthenticated().user._id;\n\n      const token = isAuthenticated().token;\n      const postId = this.props.postId;\n      uncomment(userId, token, postId, comment).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.props.updateComments(data.comments);\n        }\n      });\n    };\n\n    this.deleteConfirmed = comment => {\n      let answer = window.confirm(\"Are you sure you want to delete your comment?\");\n\n      if (answer) {\n        this.deleteComment(comment);\n      }\n    };\n  }\n\n  render() {\n    const {\n      comments\n    } = this.props;\n    const {\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Leave a comment...\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      className: \"form-control\",\n      placeholder: \"Leave a comment...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-raised btn-success mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Post\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, error), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, comments.length, \" Comments\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), comments.map((comment, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/user/${comment.postedBy._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        borderRadius: \"50%\",\n        border: \"1px solid black\"\n      },\n      className: \"float-left mr-2\",\n      height: \"30px\",\n      width: \"30px\",\n      onError: i => i.target.src = `${DefaultPostImage}`,\n      src: `${process.env.REACT_APP_API_URL}/user/photo/${comment.postedBy._id}`,\n      alt: comment.postedBy.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, comment.text), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-italic mark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, \"Posted by\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: `/user/${comment.postedBy._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, comment.postedBy.name, \" \"), \"on\", \" \", new Date(comment.created).toDateString(), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, isAuthenticated().user && isAuthenticated().user._id === comment.postedBy._id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.deleteConfirmed(comment),\n      className: \"text-danger float-right mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 57\n      }\n    }, \"Remove\"))))))))));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["E:/Agile Web App/social media (frontend)/src/post/Comment.js"],"names":["React","Component","comment","uncomment","isAuthenticated","Link","DefaultPostImage","Comment","state","text","error","handleChange","event","setState","target","value","isValid","length","addComment","e","preventDefault","userId","user","_id","token","postId","props","then","data","console","log","updateComments","comments","deleteComment","deleteConfirmed","answer","window","confirm","render","display","map","i","postedBy","borderRadius","border","src","process","env","REACT_APP_API_URL","name","Date","created","toDateString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {comment, uncomment} from './postAPI'\nimport {isAuthenticated} from '../auth'\nimport {Link} from 'react-router-dom'\n\nimport DefaultPostImage from '../images/default_avatar.png';\n\n\nclass Comment extends Component {\n    state ={\n        text:\"\",\n        error:\"\"\n    }\n\n    handleChange = event =>{\n        this.setState({text: event.target.value})\n        this.setState({ text: event.target.value });\n    }\n\n    isValid = () => {\n        const { text } = this.state;\n        if (!text.length > 0 || text.length > 150) {\n            this.setState({\n                error:\n                    \"Comment should not be empty and less than 150 characters long\"\n            });\n            return false;\n        }\n        return true;\n    };\n\n    addComment = e => {\n        e.preventDefault();\n\n        if (!isAuthenticated()) {\n            this.setState({ error: \"Please LOGIN to leave a comment\" });\n            return false;\n        }\n\n        if (this.isValid()) {\n            const userId = isAuthenticated().user._id;\n            const token = isAuthenticated().token;\n            const postId = this.props.postId;\n\n            comment(userId, token, postId, { text: this.state.text }).then(\n                data => {\n                    if (data.error) {\n                        console.log(data.error);\n                    } else {\n                        this.setState({ text: \"\" });\n                        // dispatch fresh list of coments to parent (SinglePost)\n                        this.props.updateComments(data.comments);\n                    }\n                }\n            );\n        }\n    }\n\n    deleteComment = comment => {\n        const userId = isAuthenticated().user._id;\n        const token = isAuthenticated().token;\n        const postId = this.props.postId;\n\n        uncomment(userId, token, postId, comment).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.props.updateComments(data.comments);\n            }\n        });\n    };\n\n    deleteConfirmed = comment => {\n        let answer = window.confirm(\n            \"Are you sure you want to delete your comment?\"\n        );\n        if (answer) {\n            this.deleteComment(comment);\n        }\n    };\n\n    render() {\n\n        const {comments} = this.props\n        const { error } = this.state;\n\n        return (\n            <div>\n                <h2 className=\"mt-5 mb-5\">Leave a comment...</h2>\n\n                <form onSubmit={this.addComment}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.text}\n                            className=\"form-control\"\n                            placeholder=\"Leave a comment...\"\n                        />\n                        <button className=\"btn btn-raised btn-success mt-2\">\n                            Post\n                        </button>\n                    </div>\n                </form>\n\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                <div className=\"col-md-12\">\n                    <h3 className=\"text-primary\">{comments.length} Comments</h3>\n                    <hr />\n                    {comments.map((comment, i) => (\n                        <div key={i}>\n                            <div>\n                                <Link to={`/user/${comment.postedBy._id}`}>\n                                    <img\n                                        style={{\n                                            borderRadius: \"50%\",\n                                            border: \"1px solid black\"\n                                        }}\n                                        className=\"float-left mr-2\"\n                                        height=\"30px\"\n                                        width=\"30px\"\n                                        onError={i =>\n                                            (i.target.src = `${DefaultPostImage}`)\n                                        }\n                                        src={`${\n                                            process.env.REACT_APP_API_URL\n                                        }/user/photo/${comment.postedBy._id}`}\n                                        alt={comment.postedBy.name}\n                                    />\n                                </Link>\n                                <div>\n                                    <p className=\"lead\">{comment.text}</p>\n                                    <p className=\"font-italic mark\">\n                                        Posted by{\" \"}\n                                        <Link\n                                            to={`/user/${comment.postedBy._id}`}\n                                        >\n                                            {comment.postedBy.name}{\" \"}\n                                        </Link>\n                                        on{\" \"}\n                                        {new Date(\n                                            comment.created\n                                        ).toDateString()}\n                                        <span>\n                                            {isAuthenticated().user &&\n                                                isAuthenticated().user._id ===\n                                                    comment.postedBy._id && (\n                                                    <>\n                                                        <span\n                                                            onClick={() =>\n                                                                this.deleteConfirmed(\n                                                                    comment\n                                                                )\n                                                            }\n                                                            className=\"text-danger float-right mr-1\"\n                                                        >\n                                                            Remove\n                                                        </span>\n                                                    </>\n                                                )}\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}