{"ast":null,"code":"var _jsxFileName = \"E:\\\\Agile Web App\\\\social media (frontend)\\\\src\\\\user\\\\Login.js\";\n// \"rcc -> to auto generate basic react component\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport React, { Component } from 'react'; // import {Redirect} from 'react-router-dom';\n\nimport { signin, validLogin } from '../auth';\n\nclass Login extends Component {\n  //state that holds the value of user input\n  // when we make request we can pass the value from it\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      //using array syntax it changes over time\n      //based on which it is used it takes target value\n      //eg takes password when used in password\n      this.setState({\n        [name]: event.target.value\n      }); //clearing error on change\n\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.login = event => {\n      event.preventDefault(); //stop the default behaviour / page reload\n      //we need name email password from the state\n\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        // name: name,\n        // email: email,\n        // password: password  OR\n        //since the key and value are same\n        email,\n        password\n      }; // console.log(user);\n\n      signin(user).then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          //FIRST AUTHENTICATE THE USER -> and send JWT to store in browsers local storage\n          validLogin(data, () => {\n            this.setState({\n              redirect: true\n            }); //when this is true we redirect\n          }); //AND THEN REDIRECT THEM TO DASHBOARD -> WE CREATED REDIRECT FIELD IN THE STATE \n          //IMPORTED Redirect from react-router-dom\n        }\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      redirect: false\n    };\n  } //creating handle change method\n  //higher order function -> returns another function\n  // coz we need strings PLUS access to events (we used onChanged)\n\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 40\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"LOGIN HERE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: this.state.error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      onChange: this.handleChange(\"email\"),\n      className: \"form-control\",\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      onChange: this.handleChange(\"password\"),\n      className: \"form-control\",\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.login,\n      className: \"btn btn-raised btn-primary\",\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgot-password\",\n      className: \"text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \" \", \"Forgot Password??\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["E:/Agile Web App/social media (frontend)/src/user/Login.js"],"names":["Link","Redirect","React","Component","signin","validLogin","Login","constructor","handleChange","name","event","setState","target","value","error","login","preventDefault","email","password","state","user","then","data","redirect","render","display"],"mappings":"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","sourcesContent":["// \"rcc -> to auto generate basic react component\"\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\n// import {Redirect} from 'react-router-dom';\nimport {signin, validLogin} from '../auth';\n\n\nclass Login extends Component {\n\n     //state that holds the value of user input\n    // when we make request we can pass the value from it\n    constructor(){\n        super()\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            redirect: false \n        }\n    }\n\n\n    //creating handle change method\n    //higher order function -> returns another function\n    // coz we need strings PLUS access to events (we used onChanged)\n    handleChange = (name)=> (event) => {\n        \n        //using array syntax it changes over time\n        //based on which it is used it takes target value\n        //eg takes password when used in password\n        this.setState({[name]: event.target.value});\n\n\n        //clearing error on change\n        this.setState({error: \"\"})\n\n    }\n\n\n    //\n   \n\n    login = event => {\n        event.preventDefault() //stop the default behaviour / page reload\n        //we need name email password from the state\n        const {email, password} = this.state\n        const user = {\n            // name: name,\n            // email: email,\n            // password: password  OR\n            //since the key and value are same\n            email, password\n        };\n        // console.log(user);\n         signin(user)\n         .then(data =>{\n             if(data.error)\n             {\n                 this.setState({error: data.error})\n             } \n             else {\n                 //FIRST AUTHENTICATE THE USER -> and send JWT to store in browsers local storage\n                 validLogin(data, ()=>{\n                     this.setState({redirect:true}) //when this is true we redirect\n                 })\n                 //AND THEN REDIRECT THEM TO DASHBOARD -> WE CREATED REDIRECT FIELD IN THE STATE \n                 //IMPORTED Redirect from react-router-dom\n             }\n               \n         })\n    };\n\n\n    \n\n\n    render() {\n        if(this.state.redirect){return <Redirect to=\"/\"/>}\n        return (\n            <div className = \"container\">\n                <h2 className=\"mt-5 mb-5\">LOGIN HERE</h2>\n\n\n                {/* to keep the error div hidden we are writing instyle css\n                double {{}}  first set for jsx. second for style\n                applying conditional rendering \n                if there is error displays error, if no error it wont be displayed\n                tertiary conditional statement */}\n                <div className= \"alert alert-danger\" style={{ display: this.state.error ? \"\" : \"none\"}}>\n                    {this.state.error}\n                </div>\n                \n                {/* LOGIN FORM */}\n                <form>\n                    {/* \n                        when user inputs we grab the value and put it in the state\n                        onChange we execute handleChange method event handler and\n                        \"value\" to sync the state and input => known as CONTROLLED COMPONENTS*/}\n                    <div className=\"form-group\">\n                        <label className=\"text-muted\">Email</label>\n                        <input  name=\"email\" type=\"email\" id=\"email\" onChange={this.handleChange(\"email\")}  className=\"form-control\" value={this.state.email}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"text-muted\">Password</label>\n                        <input name=\"password\" type=\"password\" id=\"password\" onChange={this.handleChange(\"password\")}  className=\"form-control\" value={this.state.password} />\n                    </div>\n                    {/* when button is clicked register function is triggered */}\n                    <button onClick={this.login} className=\"btn btn-raised btn-primary\" id=\"login\">LOGIN</button>\n                </form>\n                <p>\n                    <Link to=\"/forgot-password\" className=\"text-info\">\n                        {\" \"}\n                        Forgot Password??\n                    </Link>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}